CREATE DATABASE MEDICAL4U;
USE MEDICAL4U;


DELIMITER $$
CREATE PROCEDURE GetUserGroups()
BEGIN
	SELECT 
		GROUP_ID, GROUP_NAME, DESCRIPTION
	FROM
		USERGROUPS
	ORDER BY
		GROUP_ID ASC;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE GetDepartments()
BEGIN
	SELECT 
		DEPT_ID AS ID, DEPT_NAME AS NAME, DESCRIPTION AS `DESC`
	FROM
		DEPARTMENTS
	ORDER BY
		DEPT_ID ASC;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE GetDepartment(
    IN _DEPT_ID INT
)
BEGIN
	SELECT 
		DEPT_ID AS ID, DEPT_NAME AS NAME, DESCRIPTION AS `DESC`
	FROM
		DEPARTMENTS
	WHERE
		DEPT_ID = _DEPT_ID;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE GetUsers()
BEGIN
	SELECT 
		U.USER_ID, U.FIRST_NAME, U.LAST_NAME, D.DEPT_NAME, U.USER_NAME, G.GROUP_NAME
	FROM
        USERS U
	INNER JOIN
		DEPARTMENTS D
	ON
		U.DEPT_ID = D.DEPT_ID
	INNER JOIN
		USERGROUPS G
	ON
		U.USER_GROUP = G.GROUP_ID
	ORDER BY
		U.USER_ID;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE GetUser(
    IN _USER_ID INT
)
BEGIN
	SELECT 
		FIRST_NAME, LAST_NAME, DEPT_ID, USER_NAME, USER_GROUP
	FROM
		USERS
	WHERE
		USER_ID = _USER_ID;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE GetSpecialties()
BEGIN
	SELECT 
        SPECIALTIES_ID AS ID, SPECIALTIES_NAME AS NAME
    FROM 
        SPECIALTIES 
    ORDER BY 
        SPECIALTIES_ID ASC;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE GetSpecialty(
    IN _SPECIALTIES_ID INT
)
BEGIN
	SELECT 
        SPECIALTIES_ID AS ID, SPECIALTIES_NAME AS NAME
    FROM 
        SPECIALTIES 
    WHERE 
        SPECIALTIES_ID = _SPECIALTIES_ID;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE PostSpecialty(
	IN _SPECIALTIES_NAME VARCHAR(50),
    OUT _SPECIALTIES_ID INT
)
BEGIN
	INSERT INTO 
        SPECIALTIES (SPECIALTIES_NAME) 
    VALUES 
        (_SPECIALTIES_NAME);
    
    SELECT 
        LAST_INSERT_ID() INTO _SPECIALTIES_ID;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE PutSpecialty(
    IN _SPECIALTIES_ID INT,
	IN _SPECIALTIES_NAME VARCHAR(50)
)
BEGIN
	UPDATE SPECIALTIES 
	SET SPECIALTIES_NAME = _SPECIALTIES_NAME
	WHERE SPECIALTIES_ID = _SPECIALTIES_ID;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE GetStates()
BEGIN
	SELECT 
        STATE_ID, CODE, NAME 
    FROM 
        STATES
    ORDER BY 
        STATE_ID ASC;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE PostUser(
	IN _FIRST_NAME VARCHAR(50),
    IN _LAST_NAME VARCHAR(50),
    IN _DEPT_ID INT,
    IN _USER_NAME VARCHAR(40),
    IN _USER_PASSWORD VARCHAR(255),
    IN _USER_GROUP INT,
    OUT _USER_ID INT
)
BEGIN
	INSERT INTO 
        USERS (FIRST_NAME, LAST_NAME, DEPT_ID, USER_NAME, USER_PASSWORD, USER_GROUP)
    VALUES 
        (_FIRST_NAME, _LAST_NAME, _DEPT_ID, _USER_NAME, SHA(_USER_PASSWORD), _USER_GROUP);
        
	SELECT 
        LAST_INSERT_ID() INTO _USER_ID;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE PutUser(
    IN _USER_ID INT,
	IN _FIRST_NAME VARCHAR(50),
    IN _LAST_NAME VARCHAR(50),
    IN _DEPT_ID INT,
    IN _USER_NAME VARCHAR(40),
    IN _USER_PASSWORD VARCHAR(255),
    IN _USER_GROUP INT
)
BEGIN
	UPDATE 
		USERS 
    SET
		FIRST_NAME = _FIRST_NAME, 
        LAST_NAME = _LAST_NAME, 
        DEPT_ID = _DEPT_ID, 
        USER_NAME = _USER_NAME, 
        USER_PASSWORD = SHA(USER_PASSWORD),
        USER_GROUP = _USER_GROUP
    WHERE 
		USER_ID = _USER_ID;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE GetLocations()
BEGIN
	SELECT 
		L.LOC_ID AS ID, L.CITY, S.CODE AS STATE, L.ADDRESS, L.ZIP 
	FROM 
		LOCATIONS L
	INNER JOIN
		STATES S
	ON
		L.STATE_ID = S.STATE_ID
	ORDER BY
		LOC_ID ASC;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE GetLocation(
    IN _LOC_ID INT
)
BEGIN
	SELECT 
        LOC_ID AS ID, CITY, STATE_ID AS STATE, ADDRESS, ZIP 
    FROM 
        LOCATIONS 
    WHERE 
        LOC_ID = _LOC_ID;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE PostLocation(
    IN _CITY VARCHAR(20),
    IN _STATE_ID INT,
    IN _ADDRESS VARCHAR(30),
    IN _ZIP VARCHAR(10),
	OUT _LOC_ID INT
)
BEGIN
	INSERT INTO 
        LOCATIONS (ADDRESS, CITY, STATE_ID, ZIP) 
    VALUES
        (_ADDRESS, _CITY, _STATE_ID, _ZIP);
        
	SELECT 
        LAST_INSERT_ID() INTO _LOC_ID;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE PutLocation(
	IN _LOC_ID INT,
    IN _CITY VARCHAR(20),
    IN _STATE_ID INT,
    IN _ADDRESS VARCHAR(30),
    IN _ZIP VARCHAR(10)
)
BEGIN
	UPDATE 
        LOCATIONS
    SET 
		ADDRESS = _ADDRESS, 
        CITY = _CITY, 
        STATE_ID = _STATE_ID, 
        ZIP = _ZIP
	WHERE
		LOC_ID = _LOC_ID;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE GetRooms()
BEGIN
	SELECT 
		R.ROOM_ID AS ID, CONCAT(L.ADDRESS, ' ', L.CITY, ', ', S.CODE, ' ', L.ZIP) AS LOCATION, R.ROOM_NUMBER AS ROOMNO
	FROM 
		ROOMS R
	INNER JOIN
		LOCATIONS L
	ON
		R.LOC_ID = L.LOC_ID
	INNER JOIN
		STATES S
	ON
		L.STATE_ID = S.STATE_ID
	ORDER BY
		ROOM_ID ASC;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE GetRoom(
    IN _ROOM_ID INT
)
BEGIN
	SELECT 
        ROOM_ID AS ID, LOC_ID AS LOCID, ROOM_NUMBER AS ROOMNO
    FROM 
        ROOMS 
    WHERE 
        ROOM_ID = _ROOM_ID;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE PostLocation(
    IN _CITY VARCHAR(20),
    IN _STATE_ID INT,
    IN _ADDRESS VARCHAR(30),
    IN _ZIP VARCHAR(10),
	OUT _LOC_ID INT
)
BEGIN
	INSERT INTO 
        LOCATIONS (ADDRESS, CITY, STATE_ID, ZIP) 
    VALUES
        (_ADDRESS, _CITY, _STATE_ID, _ZIP);
        
	SELECT 
        LAST_INSERT_ID() INTO _LOC_ID;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE PutLocation(
	IN _LOC_ID INT,
    IN _CITY VARCHAR(20),
    IN _STATE_ID INT,
    IN _ADDRESS VARCHAR(30),
    IN _ZIP VARCHAR(10)
)
BEGIN
	UPDATE 
        LOCATIONS
    SET 
		ADDRESS = _ADDRESS, 
        CITY = _CITY, 
        STATE_ID = _STATE_ID, 
        ZIP = _ZIP
	WHERE
		LOC_ID = _LOC_ID;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE GetDoctorLocations(
    IN _DOC_ID INT
)
BEGIN
	SELECT 
		L.LOC_ID, CONCAT(L.ADDRESS, ' ', L.CITY, ', ', S.CODE, ' ', L.ZIP) AS ADDRESS
    FROM 
		DOCTORLOCATIONS DL
	INNER JOIN
		LOCATIONS L
	ON
		DL.LOC_ID = L.LOC_ID
	INNER JOIN
		STATES S
	ON
		L.STATE_ID = S.STATE_ID
	WHERE
		DL.DOC_ID = _DOC_ID;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE GetAddresses(IN _DOC_ID INT)
BEGIN
	SELECT
		LOC_ID, CONCAT(L.ADDRESS, ' ', L.CITY, ', ', S.CODE, ' ', L.ZIP) AS FULL_ADDRESS
	FROM
		LOCATIONS L
	INNER JOIN
		STATES S
	ON
		L.STATE_ID = S.STATE_ID
	WHERE
		LOC_ID NOT IN (
						SELECT
							LOC_ID
						FROM
							DOCTORLOCATIONS
						WHERE
							DOC_ID = _DOC_ID)
	ORDER BY
		LOC_ID ASC;
END $$
DELIMITER ;

DROP PROCEDURE GetDoctorSpecialties;
DELIMITER $$
CREATE PROCEDURE GetDoctorSpecialties(
    IN _DOC_ID INT
)
BEGIN
	SELECT 
		S.SPECIALTIES_ID AS ID, SPECIALTIES_NAME AS NAME
    FROM 
		DOCTORSPECIALTIES DS
	INNER JOIN
		SPECIALTIES S
	ON
		DS.SPECIALTIES_ID = S.SPECIALTIES_ID
	WHERE
		DS.DOC_ID = _DOC_ID
	ORDER BY
		S.SPECIALTIES_ID ASC;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE GetSpecialtiesByDOCID(
	IN _DOC_ID INT
)
BEGIN
	SELECT
		SPECIALTIES_ID AS ID, SPECIALTIES_NAME AS NAME
	FROM
		SPECIALTIES
	WHERE
		SPECIALTIES_ID NOT IN (
								SELECT
									SPECIALTIES_ID
								FROM
									DOCTORSPECIALTIES 
								WHERE
									DOC_ID = _DOC_ID)
	ORDER BY
		SPECIALTIES_ID ASC;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE GetDoctors()
BEGIN
	SELECT 
		D.DOC_ID, CONCAT(D.DOC_NAME, ', ', D.SUFFIX) AS DOC_NAME, D.DOC_PHONE, A.ADDRESSES, S.SPECIALTIES
	FROM
		DOCTORS D
	LEFT JOIN (
		SELECT
			DL.DOC_ID, GROUP_CONCAT(CONCAT(L.ADDRESS, ' ', L.CITY, ', ', S.CODE, ' ', L.ZIP) SEPARATOR '<br>') AS ADDRESSES
		FROM
			DOCTORLOCATIONS DL
		INNER JOIN
			LOCATIONS L
		ON
			DL.LOC_ID = L.LOC_ID
		INNER JOIN
			STATES S
		ON
			L.STATE_ID = S.STATE_ID
		GROUP BY
			DL.DOC_ID
	)  A
	ON
		D.DOC_ID = A.DOC_ID
	LEFT JOIN (   
		SELECT 
			DS.DOC_ID, GROUP_CONCAT(SP.SPECIALTIES_NAME SEPARATOR '<br>') AS SPECIALTIES
		FROM 
			DOCTORSPECIALTIES DS
		LEFT JOIN
			SPECIALTIES SP
		ON
			DS.SPECIALTIES_ID = SP.SPECIALTIES_ID
		GROUP BY
			DS.DOC_ID
	) S
	ON
		D.DOC_ID = S.DOC_ID
	ORDER BY
		D.DOC_ID ASC;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE GetDoctor(
    IN _DOC_ID INT
)
BEGIN
	SELECT 
        DOC_ID, DOC_NAME, DOC_PHONE, SUFFIX 
    FROM 
        DOCTORS 
    WHERE 
        DOC_ID = _DOC_ID;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE PostDoctor(
	IN _DOC_NAME VARCHAR(30),
    IN _DOC_PHONE VARCHAR(15),
    IN _SUFFIX VARCHAR(20),
    OUT _DOC_ID INT
)
BEGIN
	INSERT INTO 
		DOCTORS (DOC_NAME, DOC_PHONE, SUFFIX) 
	VALUES
		(_DOC_NAME, _DOC_PHONE, _SUFFIX);
	SELECT 
		LAST_INSERT_ID() INTO _DOC_ID;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE PutDoctor(
	IN _DOC_ID INT,
	IN _DOC_NAME VARCHAR(30),
    IN _DOC_PHONE VARCHAR(15),
    IN _SUFFIX VARCHAR(20)
)
BEGIN
	UPDATE
		DOCTORS
	SET
		DOC_NAME = _DOC_NAME,
        DOC_PHONE = _DOC_PHONE,
        SUFFIX = _SUFFIX
	WHERE
		DOC_ID = _DOC_ID;
END $$
DELIMITER ;



DELIMITER $$
CREATE PROCEDURE PostSpecialtyData(
	IN _DOC_ID INT,
	IN _IDS VARCHAR(1000)
)
BEGIN
	SET @SQL = CONCAT('INSERT INTO DOCTORSPECIALTIES (DOC_ID, SPECIALTIES_ID) SELECT ', _DOC_ID, ', S.SPECIALTIES_ID FROM SPECIALTIES S LEFT JOIN DOCTORSPECIALTIES DS ON S.SPECIALTIES_ID = DS.SPECIALTIES_ID AND DS.DOC_ID = ', _DOC_ID, ' WHERE S.SPECIALTIES_ID IN (', _IDS, ') AND DS.SPECIALTIES_ID IS NULL;');
	PREPARE STMT FROM @SQL;
    EXECUTE STMT;
    
	SET @SQL = CONCAT('DELETE FROM DOCTORSPECIALTIES WHERE DOC_ID = ', _DOC_ID,  ' AND SPECIALTIES_ID NOT IN (' ,_IDS, ');');
	PREPARE STMT FROM @SQL;
    EXECUTE STMT;
END $$
DELIMITER ;


DELIMITER $$
CREATE PROCEDURE PostLocationData(
	IN _DOC_ID INT,
	IN _IDS VARCHAR(1000)
)
BEGIN
	SET @SQL = CONCAT('INSERT INTO DOCTORLOCATIONS (DOC_ID, LOC_ID) SELECT ', _DOC_ID, ', L.LOC_ID FROM LOCATIONS L LEFT JOIN DOCTORLOCATIONS DL ON L.LOC_ID = DL.LOC_ID AND DL.DOC_ID = ', _DOC_ID, ' WHERE L.LOC_ID IN (', _IDS, ') AND DL.LOC_ID IS NULL;');
	PREPARE STMT FROM @SQL;
    EXECUTE STMT;
    
	SET @SQL = CONCAT('DELETE FROM DOCTORLOCATIONS WHERE DOC_ID = ', _DOC_ID,  ' AND LOC_ID NOT IN (', _IDS, ');');
	PREPARE STMT FROM @SQL;
    EXECUTE STMT;
END $$
DELIMITER ;
